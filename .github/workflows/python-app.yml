# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

env:
  TARGET_CONFIG: ${{ secrets.TARGET_CONFIG }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

on:
  push:
    branches: [ dev-ci-cd-poc ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        mkdir sandbox
        echo "$GOOGLE_APPLICATION_CREDENTIALS" > "sandbox/sa.json"
        echo "$TARGET_CONFIG" > "sandbox/target-config.json"
        pip install pytest
        pytest --verbose

#TODO: CI/CD: see below:
# how do I test with rsc resources??? - DONE. Use Gord's approach to dynamic directory building (OS-agnostic)
#how do I run a test which uses a sensitive file from gitignored sandbox directory??? - DONE. Use Github secrets and workflow env var
#TODO: should my workflow be Pypi package or Python package instead of python application?
        #Not yet. In the future, we should look into publishing to Pypi.
        #Then we can set up Pypi package publishihng workflow on new release creation
    #TODO: Compare .yml files for package vs app workflows
#TODO: how do I change the name on the status badge? I think I should create a workflow under a diff name
    #TODO: create workflow called "master" and "development"?